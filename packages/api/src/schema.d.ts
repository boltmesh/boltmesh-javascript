/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/v1/waitlists": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get waitlist projects
         * @description Get waitlist projects.
         */
        get: operations["v1.forms.waitlists.getProjects"];
        put?: never;
        /**
         * Create a waitlist project
         * @description Create a waitlist project.
         */
        post: operations["v1.forms.waitlists.createProject"];
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/waitlists/{id}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a waitlist project
         * @description Get information of a waitlist project.
         */
        get: operations["v1.forms.waitlists.getProject"];
        /**
         * Update a waitlist project
         * @description Update a waitlist project.
         */
        put: operations["v1.forms.waitlists.updateProject"];
        post?: never;
        /**
         * Delete a waitlist project
         * @description Delete a waitlist project.
         */
        delete: operations["v1.forms.waitlists.deleteProject"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/waitlists/{id}/count": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get waitlist item count of a project
         * @description Get total item count of a waitlist project by ID.
         */
        get: operations["v1.forms.waitlists.getItemCount"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/waitlists/{id}/items": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get waitlist items
         * @description Get items of a waitlist project.
         */
        get: operations["v1.forms.waitlists.items.getItems"];
        put?: never;
        /**
         * Create a waitlist item
         * @description Create a waitlist item.
         */
        post: operations["v1.forms.waitlists.items.createItem"];
        /**
         * Delete waitlist items
         * @description Delete waitlist items.
         */
        delete: operations["v1.forms.waitlists.items.deleteItems"];
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/waitlists/{id}/items/{itemId}": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a waitlist item
         * @description Get information of a waitlist item.
         */
        get: operations["v1.forms.waitlists.items.getItem"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/v1/waitlists/{id}/items/email": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get a waitlist item by email
         * @description Get information of a waitlist item by email address.
         */
        get: operations["v1.forms.waitlists.items.getItemByEmail"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: never;
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "v1.forms.waitlists.getProjects": {
        parameters: {
            query: {
                search?: string;
                limit: number;
                offset: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        /** @description Waitlist projects */
                        projects: {
                            id: string;
                            name: string;
                            description: string | null;
                            teamId: string;
                            /** Format: date-time */
                            createdAt: string;
                            /** @enum {unknown} */
                            createdWay: "dashboard" | "openapi";
                            discordEnabled: boolean | null;
                            discordMessageType: ("channel_message" | "direct_message") | null;
                            discordChannelId: string | null;
                            discordUserId: string | null;
                            slackEnabled: boolean | null;
                            slackMessageType: ("channel_message" | "direct_message") | null;
                            slackChannelId: string | null;
                            slackUserId: string | null;
                            /** @description The amount of the resource. */
                            total: number;
                        }[];
                        /** @description The amount of the resource. */
                        total: number;
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.createProject": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    discordEnabled?: boolean | null;
                    discordMessageType?: ("channel_message" | "direct_message") | null;
                    discordChannelId?: string | null;
                    discordUserId?: string | null;
                    slackEnabled?: boolean | null;
                    slackMessageType?: ("channel_message" | "direct_message") | null;
                    slackChannelId?: string | null;
                    slackUserId?: string | null;
                    /** @description Name */
                    name: string;
                    /** @description Description */
                    description: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        project: {
                            id: string;
                            name: string;
                            description: string | null;
                            teamId: string;
                            /** Format: date-time */
                            createdAt: string;
                            /** @enum {unknown} */
                            createdWay: "dashboard" | "openapi";
                            discordEnabled: boolean | null;
                            discordMessageType: ("channel_message" | "direct_message") | null;
                            discordChannelId: string | null;
                            discordUserId: string | null;
                            slackEnabled: boolean | null;
                            slackMessageType: ("channel_message" | "direct_message") | null;
                            slackChannelId: string | null;
                            slackUserId: string | null;
                        };
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.getProject": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        /** @description Waitlist project detail */
                        project: {
                            id: string;
                            name: string;
                            description: string | null;
                            teamId: string;
                            /** Format: date-time */
                            createdAt: string;
                            /** @enum {unknown} */
                            createdWay: "dashboard" | "openapi";
                            discordEnabled: boolean | null;
                            discordMessageType: ("channel_message" | "direct_message") | null;
                            discordChannelId: string | null;
                            discordUserId: string | null;
                            slackEnabled: boolean | null;
                            slackMessageType: ("channel_message" | "direct_message") | null;
                            slackChannelId: string | null;
                            slackUserId: string | null;
                            /** @description The amount of the resource. */
                            total: number;
                        };
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.updateProject": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** @description Name */
                    name: string;
                    /** @description Description */
                    description: string;
                    discordEnabled?: boolean;
                    /** @enum {unknown} */
                    discordMessageType?: "channel_message" | "direct_message";
                    discordChannelId?: string;
                    discordUserId?: string;
                    slackEnabled?: boolean;
                    /** @enum {unknown} */
                    slackMessageType?: "channel_message" | "direct_message";
                    slackChannelId?: string;
                    slackUserId?: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        project: {
                            id: string;
                            name: string;
                            description: string | null;
                            teamId: string;
                            /** Format: date-time */
                            createdAt: string;
                            /** @enum {unknown} */
                            createdWay: "dashboard" | "openapi";
                            discordEnabled: boolean | null;
                            discordMessageType: ("channel_message" | "direct_message") | null;
                            discordChannelId: string | null;
                            discordUserId: string | null;
                            slackEnabled: boolean | null;
                            slackMessageType: ("channel_message" | "direct_message") | null;
                            slackChannelId: string | null;
                            slackUserId: string | null;
                        };
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.deleteProject": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: {
            content: {
                "application/json": Record<string, never>;
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.getItemCount": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        /** @description The amount of the resource. */
                        total: number;
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.items.getItems": {
        parameters: {
            query: {
                search?: string;
                limit: number;
                offset: number;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        items: {
                            id: string;
                            projectId: string;
                            email: string;
                            /** Format: date-time */
                            createdAt: string;
                        }[];
                        /** @description The amount of the resource. */
                        total: number;
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.items.createItem": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    /** Format: email */
                    email: string;
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        item?: {
                            id: string;
                            projectId: string;
                            email: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                        /** @description The amount of the resource. */
                        total?: number;
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.items.deleteItems": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody: {
            content: {
                "application/json": {
                    items: string[];
                };
            };
        };
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.items.getItem": {
        parameters: {
            query?: never;
            header?: never;
            path: {
                id: string;
                itemId: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        item: {
                            id: string;
                            projectId: string;
                            email: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
            };
        };
    };
    "v1.forms.waitlists.items.getItemByEmail": {
        parameters: {
            query: {
                email: string;
            };
            header?: never;
            path: {
                id: string;
            };
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description OK */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The response status. */
                        ok: boolean;
                        /** @description The reponse messgae. */
                        message: string;
                        item: {
                            id: string;
                            projectId: string;
                            email: string;
                            /** Format: date-time */
                            createdAt: string;
                        };
                    };
                };
            };
        };
    };
}
